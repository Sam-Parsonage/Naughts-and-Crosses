using System;

class MainClass {
  public static void Main (string[] args) {
    MyGame Naught = new MyGame();
    Console.WriteLine("Player 1 enter your name");
    string player1name = Console.ReadLine();
    Console.WriteLine("Player 2 enter your name");
    string player2name = Console.ReadLine();
    Random rnd = new Random();
    int num = rnd.Next(2);
    int currentplayer;
    string turn;

    
    if (num == 0)
    {
    Console.WriteLine(player1name + " is going first " + "\n" + "Pick whether you want to be Xs or Os");
    currentplayer = 1;
    }
    else{
    Console.WriteLine(player2name + " is going first " + "\n" + "Pick whether you want to be Xs or Os");   
    currentplayer = 2;
    }


    string playerchoice = Console.ReadLine();
    if (playerchoice == "X")
    {
      turn = "O";
    }
    else
    {
      turn = "X";
    }


    while (Naught.isThereWinner() == false)
    { 
      if (currentplayer == 1)
      {
        currentplayer = 2;
      }
      else
      {
        currentplayer = 1;
      }
      
      if (turn == "X")
      {
        turn = "O";
      }
      else
      {
        turn = "X";
      }

      Naught.outputBoard();
      string position;

      while (true)
      {
        if (currentplayer == 1)
        {
        Console.WriteLine(player1name + " enter the position you want to place your " + turn);
        }
        else
        {
          Console.WriteLine(player2name + " enter the position you want to place your " + turn);
        }

        position = Console.ReadLine();
        if (Naught.isPositionEmpty(position))
        {
         Naught.addMark(position,turn);
         break;
        }
        else
        {
          Console.WriteLine("That position is already taken " + "\n" + "Please pick another");
        } 
      }
    }
    Naught.outputBoard();
    if (Naught.isBoardFull())
      {
        Console.WriteLine("The board is full" + "\n" + "The game is a draw");
      }
    else
    {
      Console.WriteLine("Three " + turn + "s have been assembled onto the board");
      if (num == 0)
      {
        if (currentplayer == 1)
        {
          Console.WriteLine(player1name + " is the winner");
        }
        else{
          Console.WriteLine(player2name + " is the winner");
        }
      }
      else{
        if (currentplayer == 1)
        {
          Console.WriteLine(player2name + " is the winner");
        }
        else
        {
          Console.WriteLine(player1name + " is the winner");
        }
      }
    }
  }
}

public class MyGame
{

    public MyGame()
    {
    }


    private string[,] board = new string[3, 3] { {"1","2","3"},{"4","5","6"},{"7","8","9"}};



    public void outputBoard()
    {
      Console.WriteLine(board[0,0] + "|" +  board[0,1] + "|" + board[0,2]);
      Console.WriteLine("-----");
      Console.WriteLine(board[1,0] + "|" +  board[1,1] + "|" + board[1,2]);
      Console.WriteLine("-----");
      Console.WriteLine(board[2,0] + "|" +  board[2,1] + "|" + board[2,2]);
    }

    public void addMark(string Position, string player)
    {
      for (int i = 0; i<3; i++)
      {
        for (int j = 0; j<3; j++)
        {
          if (board[i,j] == Position)
          {
            board[i,j] = player;
          }
        }
      }
    }


    public bool isBoardFull()
    {
      bool full = true;
      for (int i = 0; i<3; i++)
      {
        for (int j = 0; j<3; j++)
        {
          if (board[i,j] != "X" && board[i,j] != "O")
          {
            full = false;
          }
        }
      }
      return full;
    }


    public bool isPositionEmpty(string Position)
    {
      bool empty = false;
      for (int i = 0; i <3; i++)
      {
        for (int j = 0; j<3; j++)
        {
          if (board[i,j] == Position)
          {
            empty = true;
          }
        }
      }
      return empty;
    }


    public bool isThereWinner()
    {
      if (winningRow() | winningColumn() | winningDiag())
      {
        return true;
      }
      else if (isBoardFull())
      {
        return true;
      }
      else
      {
        return false;
      }
    }


    private bool winningRow()
    {
      bool winner = false;
      for (int i = 0; i<3; i++)
      {
        string testChar = board[i,0];
        if (board[i,0] == testChar && board[i,1] == testChar && board[i,2] == testChar)
        {
          winner = true;
        }
      }
      return winner;
    }


    private bool winningColumn()
    {
      bool winner = false;
      for (int i = 0; i<3; i++)
      {
        string testChar = board[i,0];
        if (board[0,i] == testChar && board[1,i] == testChar && board[2,i] == testChar)
        {
          winner = true;
        }
      }
      return winner;
    }

    private bool winningDiag()
    {
      string testChar = board[1,1];
      if (board[0,0] == testChar && board[2,2] == testChar || board[0,2] == testChar && board[2,0] == testChar)
      {
        return true;
      }
      else
      {
        return false;
      }
    }
}